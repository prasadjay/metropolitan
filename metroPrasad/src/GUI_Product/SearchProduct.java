/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Product;

import GUI_project.*;
import Global_Sources.Dbconnect;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PRASAD
 */
public class SearchProduct extends javax.swing.JFrame {
    Dbconnect db1 = new Dbconnect();
    Connection con1 = db1.connect();
    
    String selectedItem = "";
    /**
     * Creates new form Sub_Interface
     */
    public SearchProduct() {
        initComponents();
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        
//        if(Data.Login.getPre_UI_type()==1 || Data.Login.getPre_UI_type()==2 )
//        {
//          animation_Start a = new animation_Start(getWidth(), getHeight());
//          setVisible(true);
//          a.start();
//        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnMore = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Serial NO");

        jLabel6.setText("Commissioned date  ");

        jLabel7.setText("Delivered  time ");

        jLabel8.setText("Genset Model");

        jLabel9.setText("Genset S/N");

        jLabel14.setText("Controller Type");

        jLabel15.setText("Environment");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Products");
        setBackground(new java.awt.Color(252, 252, 252));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(252, 252, 252));

        jLabel2.setText("Keyword");

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnMore.setText("Get More Info");
        btnMore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(441, Short.MAX_VALUE)
                .addComponent(btnMore, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(387, 387, 387))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(49, 49, 49)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMore)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class animation_Start extends Thread {

        int max_w;
        int max_h;

        public animation_Start(int max_w, int max_h) {
            this.max_h = max_h;
            this.max_w = max_w;
        }
        long sleepb = 1;
        int add = 30;//no pixels add

        public void run() {
            setSize(0, 0);
            int x = 0;
            int y = 0;

            while (y < max_h || x < max_w) {
                if (y > max_h && x < max_w) {
                    x = x + add;
                    setSize(x, max_h);
                } else if (y < max_h && x > max_w) {

                    y = y + add;
                    setSize(max_w, y);
                } else if (y < max_h && x < max_w) {
                    y = y + add;
                    x = x + add;
                    setSize(x, y);
                } else//window has got the wanted size(prefered size)
                {
                    setSize(max_h, max_w);
                    pack();
                }



                try {
                    sleep(sleepb);
                } catch (InterruptedException ex) {
                    
                }

            }
            //  setSize(962, 697);
            pack();
           // System.out.println(getWidth());
            //System.out.println(getHeight());

        }
    }
    //animation for exit of window
    class animation_exit extends Thread {

        long sleepa = 1;
        int min =25;//no pixels reduce

        public void run() {
            int x = getWidth();
            int y = getHeight();

            while (x > 0 || y > 0) {
                x = x - min;
                y = y - min;
                setSize(x, y);
                try {
                    sleep(sleepa);
                } catch (InterruptedException ex) {
                    
                }

            }

        }
    }
    
    private void btnMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreActionPerformed
        // TODO add your handling code here:
        
        String selection = this.selectedItem;
        storeDetails.setDetailedProduct(selection);
         ViewDetailedProduct one = new ViewDetailedProduct();
                   one.setVisible(true);
       
        
        /*
        String gen = "select gID from generator";

        ResultSet result1= db1.executeSQLQuery(gen);
        boolean b = false;

        
        try
        {
            loop1:while(result1.next())
        {
            if(result1.getString("gID").equals(selection))
            {
                 ViewDetailedProduct one = new ViewDetailedProduct();
                   one.setVisible(true);
                   b = true;
                   break loop1;
                   
            }
          
                
                
        
        }
          
            if(b==false)
                JOptionPane.showMessageDialog(null, "Model Not Found. Re check and Confirm!","Re check Model!", 1);
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage(),"Exception Found!", 1);
        }*/
        
    }//GEN-LAST:event_btnMoreActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String k = "%"+this.txtSearch.getText().toString()+"%";
        String query1 = "select gID as 'ID', gName as 'Name', frequency as 'Frequency (Hz)', pPower as 'Power' from generator where gAvailability = 'YES' AND (gID like '"+k+"' OR gName like '"+k+"')";
       
        
        ResultSet result= db1.executeSQLQuery(query1);
     
        
        try {

                int columCount = 0;
                ResultSetMetaData rsmd = result.getMetaData();
                Vector myVector = new Vector();
                columCount = rsmd.getColumnCount();
                for (int i = 1; i <= columCount; i++) {
                    myVector.add(rsmd.getColumnLabel(i));
                }
                DefaultTableModel amodel = new DefaultTableModel(myVector, 0)/*0=row count*/ {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        //all cells false
                        return false;
                    }
                };


                while (result.next()) {
                    String[] rowData = new String[columCount];
                    for (int i = 1; i <= columCount; i++) {
                        if (i == 1) {
                            String id = result.getString(i);
                            rowData[i - 1] = id.toUpperCase();
                        } else {
                            rowData[i - 1] = result.getString(i);
                        }
                    }
                    amodel.addRow(rowData);
                }

                jTable1.setModel(amodel);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error in Showing Data", "METROPOLITAN ENGINEERING (PVT) LTD", 1);
            }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()>0 && evt.getKeyCode()<200 )
        {
            if (this.txtSearch.getText().equals(""))
            {
                //clear the table
                DefaultTableModel amodel2 = new DefaultTableModel();
                this.jTable1.setModel(amodel2);

            }
            else
            {
                /////////
                
                PreparedStatement stmt = null;

                String temp;
                String key = "%";
                StringTokenizer st1 = new StringTokenizer(this.txtSearch.getText());
                while (st1.hasMoreTokens()) {
                    temp = st1.nextToken();
                    key = key + temp + "%"; //set the key words to search in sql

                }

                ///////////
                try {

                    //stmt = con1.prepareStatement("select company as 'Company' from Customer where company like ? order by company");
                    
                    /*
                     * gID varchar(20) PRIMARY KEY,
gName varchar(50),
frequency varchar(10),
voltage varchar(10),
phaseCurrent varchar(10),
sPower varchar(10),
pPower varchar(10),
maxCurrent varchar(10),
gAvailability varchar(10)
                     * 
                     */
                 
                    stmt = con1.prepareStatement("select gID as 'ID', gName as 'Name', frequency as 'Frequency (Hz)', pPower as 'Power'  from generator where gAvailability = 'YES' AND (gID like ? OR gName like ?)");
                    stmt.setString(1, key);
                    stmt.setString(2, key);
                    ResultSet result = stmt.executeQuery();

                    if (result.next()) {
                        ////////////
                        try {

                            ResultSet resultE = stmt.executeQuery();
                            int columCount = 0;
                            ResultSetMetaData rsmd = resultE.getMetaData();
                            Vector myVector = new Vector();
                            columCount = rsmd.getColumnCount();
                            for (int i = 1; i <= columCount; i++) {
                                myVector.add(rsmd.getColumnLabel(i));
                            }
                             DefaultTableModel amodel = new DefaultTableModel(myVector, 0)/*0=row count*/ {
                            @Override
                            public boolean isCellEditable(int row, int column) {
                                //all cells false
                                return false;
                            }
                        };

                        while (resultE.next()) {
                            String[] rowData = new String[columCount];
                            for (int i = 1; i <= columCount; i++) {
                                if (i == 1) {
                                    String id = resultE.getString(i);
                                    rowData[i - 1] = id.toUpperCase();
                                } else {
                                    rowData[i - 1] = resultE.getString(i);
                                }
                            }
                            amodel.addRow(rowData);
                        }
                        
                        this.jTable1.setModel(amodel);

                    } catch (Exception e) {
                        
                    }                                                                
                                    
                }
                
                else
                {                    
                    //JOptionPane.showMessageDialog(this, "Database does not contain any company data that match for key words.", "", 1); 
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage() + "\nPlease Try Again", "METROPOLITAN ENGINEERING (PVT) LTD", 2);
            }
                
              finally {
                //Close the db connection
                
            }
                                   
                   
                
            }
            
           
            
            
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        int a=this.jTable1.getSelectedRow();
             String c=jTable1.getValueAt(a, 0).toString();
             this.selectedItem = c;
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        if (Data.Login.getPre_UI_type() == 1 || Data.Login.getPre_UI_type() == 2) {
            animation_exit a = new animation_exit();
            a.start();
            try {
                a.join();
            } catch (InterruptedException ex) {
                
            }
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchProduct().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMore;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
