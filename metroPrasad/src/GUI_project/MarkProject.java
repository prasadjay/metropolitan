/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_project;

import Global_Sources.Dbconnect;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PRASAD
 */
public class MarkProject extends javax.swing.JFrame {

    Dbconnect db1 = new Dbconnect();
    Connection con1 = db1.connect();
    
    String selectedItem="";
     String selectedItem2="";
    /**
     * Creates new form Sub_Interface
     */
    public MarkProject() {
        initComponents();
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        
//        if(Data.Login.getPre_UI_type()==1 || Data.Login.getPre_UI_type()==2 )
//        {
//          animation_Start a = new animation_Start(getWidth(), getHeight());
//          setVisible(true);
//          a.start();
//        }
        
        fillMarkProjectTable();
        fillUnMarkProjectTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablePending1 = new javax.swing.JTable();
        btnMarc = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePending2 = new javax.swing.JTable();
        btnMarc1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Serial NO");

        jLabel6.setText("Commissioned date  ");

        jLabel7.setText("Delivered  time ");

        jLabel8.setText("Genset Model");

        jLabel9.setText("Genset S/N");

        jLabel14.setText("Controller Type");

        jLabel15.setText("Environment");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mark Projects");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(252, 252, 252));

        tablePending1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tablePending1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePending1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePending1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablePending1);

        btnMarc.setText("Mark As Completed");
        btnMarc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcActionPerformed(evt);
            }
        });

        jButton1.setText("Mark Individual Components");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(39, 39, 39))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(btnMarc, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMarc)
                    .addComponent(jButton1))
                .addGap(18, 18, 18))
        );

        jTabbedPane2.addTab("Mark Project", jPanel1);

        jPanel3.setBackground(new java.awt.Color(252, 252, 252));

        tablePending2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tablePending2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePending2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePending2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablePending2);

        btnMarc1.setText("Mark As Pending");
        btnMarc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarc1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(48, 48, 48))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addComponent(btnMarc1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnMarc1)
                .addGap(19, 19, 19))
        );

        jTabbedPane2.addTab("Unmark Project", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    class animation_Start extends Thread {

        int max_w;
        int max_h;

        public animation_Start(int max_w, int max_h) {
            this.max_h = max_h;
            this.max_w = max_w;
        }
        long sleepb = 1;
        int add = 30;//no pixels add

        public void run() {
            setSize(0, 0);
            int x = 0;
            int y = 0;

            while (y < max_h || x < max_w) {
                if (y > max_h && x < max_w) {
                    x = x + add;
                    setSize(x, max_h);
                } else if (y < max_h && x > max_w) {

                    y = y + add;
                    setSize(max_w, y);
                } else if (y < max_h && x < max_w) {
                    y = y + add;
                    x = x + add;
                    setSize(x, y);
                } else//window has got the wanted size(prefered size)
                {
                    setSize(max_h, max_w);
                    pack();
                }



                try {
                    sleep(sleepb);
                } catch (InterruptedException ex) {
                    
                }

            }
            //  setSize(962, 697);
            pack();
           // System.out.println(getWidth());
            //System.out.println(getHeight());

        }
    }
    //animation for exit of window
    class animation_exit extends Thread {

        long sleepa = 1;
        int min =25;//no pixels reduce

        public void run() {
            int x = getWidth();
            int y = getHeight();

            while (x > 0 || y > 0) {
                x = x - min;
                y = y - min;
                setSize(x, y);
                try {
                    sleep(sleepa);
                } catch (InterruptedException ex) {
                    
                }

            }

        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        staticData.setTempProjectData(this.selectedItem);
        MarkComponent m = new MarkComponent();
        m.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        fillMarkProjectTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        fillUnMarkProjectTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnMarcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcActionPerformed
        // TODO add your handling code here:
        
        PreparedStatement stmt1 = null;
       
            String ID = this.selectedItem;
        
            int x1=0;
           
           try
           {
   
           stmt1 = con1.prepareStatement("update project set pStatus='finished'  where pID=?");
          
           stmt1.setString(1, ID);
          
           
   
           x1 = stmt1.executeUpdate();
           
          
           }
           catch(Exception e)
           {
               System.out.println(e.getMessage());
           }
       
           
        
          if(x1>0)
              JOptionPane.showMessageDialog(null, "Records updated sucessfully! ","METROPOLITAN ENGINEERING (PVT) LTD", 1);
           else
               JOptionPane.showMessageDialog(null, "Error in Database. Please Reconnect! ","METROPOLITAN ENGINEERING (PVT) LTD", 1);
          
          
          
        fillMarkProjectTable();
        fillUnMarkProjectTable();
        
    }//GEN-LAST:event_btnMarcActionPerformed

    private void btnMarc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarc1ActionPerformed
        // TODO add your handling code here:
        
        PreparedStatement stmt1 = null;
       
            String ID = this.selectedItem2;
        
            int x1=0;
           
           try
           {
   
           stmt1 = con1.prepareStatement("update project set pStatus='pending'  where pID=?");
          
           stmt1.setString(1, ID);
          
           
   
           x1 = stmt1.executeUpdate();
           
          
           }
           catch(Exception e)
           {
               System.out.println(e.getMessage());
           }
       
           
        
          if(x1>0)
              JOptionPane.showMessageDialog(null, "Records updated sucessfully! ","METROPOLITAN ENGINEERING (PVT) LTD", 1);
           else
               JOptionPane.showMessageDialog(null, "Error in Database. Please Reconnect! ","METROPOLITAN ENGINEERING (PVT) LTD", 1);
          
          
          
        fillMarkProjectTable();
        fillUnMarkProjectTable();
    }//GEN-LAST:event_btnMarc1ActionPerformed

    private void tablePending1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePending1MouseClicked
        // TODO add your handling code here:
        
        int a=this.tablePending1.getSelectedRow();
             String c=tablePending1.getValueAt(a, 0).toString();
             this.selectedItem = c;
        
    }//GEN-LAST:event_tablePending1MouseClicked

    private void tablePending2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePending2MouseClicked
        // TODO add your handling code here:
        
        int a=this.tablePending2.getSelectedRow();
             String c=tablePending2.getValueAt(a, 0).toString();
             this.selectedItem2 = c;
    }//GEN-LAST:event_tablePending2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        if (Data.Login.getPre_UI_type() == 1 || Data.Login.getPre_UI_type() == 2) {
            animation_exit a = new animation_exit();
            a.start();
            try {
                a.join();
            } catch (InterruptedException ex) {
                
            }
        }
        
    }//GEN-LAST:event_formWindowClosing

//my methods start here
    
    public void fillMarkProjectTable()
    {

        String query1 = "select pID as 'ID', pName as 'Name', pSdate as 'Start Date', pEndDate as 'End Date',  pGsupplier as 'Global Supplier', pStatus as 'Project Status'  from project where pAvailability = 'YES' AND pStatus= 'pending' ";


        ResultSet result= db1.executeSQLQuery(query1);

        try {

            int columCount = 0;
            ResultSetMetaData rsmd = result.getMetaData();
            Vector myVector = new Vector();
            columCount = rsmd.getColumnCount();
            for (int i = 1; i <= columCount; i++) {
                myVector.add(rsmd.getColumnLabel(i));
            }
            DefaultTableModel amodel = new DefaultTableModel(myVector, 0)/*0=row count*/ {
                @Override
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };

            while (result.next()) {
                String[] rowData = new String[columCount];
                for (int i = 1; i <= columCount; i++) {
                    if (i == 1) {
                        String id = result.getString(i);
                        rowData[i - 1] = id.toUpperCase();
                    } else {
                        rowData[i - 1] = result.getString(i);
                    }
                }
                amodel.addRow(rowData);
            }

            tablePending1.setModel(amodel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error in Showing Data", "METROPOLITAN ENGINEERING (PVT) LTD", 1);
        }
    }
    
    public void fillUnMarkProjectTable()
    {
        String query1 = "select pID as 'ID', pName as 'Name', pSdate as 'Start Date', pEndDate as 'End Date',  pGsupplier as 'Global Supplier', pStatus as 'Project Status' from project where pStatus= 'finished' AND pAvailability='YES' ";

        ResultSet result= db1.executeSQLQuery(query1);

        try {

            int columCount = 0;
            ResultSetMetaData rsmd = result.getMetaData();
            Vector myVector = new Vector();
            columCount = rsmd.getColumnCount();
            for (int i = 1; i <= columCount; i++) {
                myVector.add(rsmd.getColumnLabel(i));
            }
            DefaultTableModel amodel = new DefaultTableModel(myVector, 0)/*0=row count*/ {
                @Override
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };

            while (result.next()) {
                String[] rowData = new String[columCount];
                for (int i = 1; i <= columCount; i++) {
                    if (i == 1) {
                        String id = result.getString(i);
                        rowData[i - 1] = id.toUpperCase();
                    } else {
                        rowData[i - 1] = result.getString(i);
                    }
                }
                amodel.addRow(rowData);
            }

            tablePending2.setModel(amodel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error in Showing Data", "METROPOLITAN ENGINEERING (PVT) LTD", 1);
        }
    }
    
    
    //my methods ends here
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkProject().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMarc;
    private javax.swing.JButton btnMarc1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tablePending1;
    private javax.swing.JTable tablePending2;
    // End of variables declaration//GEN-END:variables
}
